################################################################################
# EWallet Session Manager (Command Chain Instruction Set)
################################################################################

* Setup session manager socket based instruction listener:
    session_manager_controller(
        controller='system', ctype='action', action='start', start='instruction_listener'
        )

* Start session manager socket based instruction listener:
    session_manager_controller(
        controller='system', ctype='action', action='open', opening='sockets', in_port=<num>, out_port=<num>
        )

* Close session manager socket based instruction listener:
    session_manager_controller(
        controller='system', ctype='action', action='close', closing='sockets'
        )

* User action Request Client ID
    * Returns Client ID string.
    session_manager_controller(
        controller='client', ctype='action', action='request', request='client_id'
        )

* System action New Worker
    * Returns EWalletWorker object.
    session_manager_controller(
        controller='system', ctype='action', action='new', new='worker'
        )

* System action New Session
    * Returns EWallet object.
    session_manager_controller(
        controller='system', ctype='action', action='new', new='session'
        )

* User action Request Session Token
    * Returns EWallet Session Token.
    session_manager_controller(
        controller='client', ctype='action', action='request', request='session_token',
        client_id=client_id
        )

* User action Create Account
    * Returns ResUser object.
    session_manager_controller(
        controller='client', ctype='action', action='new',
        new='account', client_id=<client-id>, session_token=<session-token>,
        user_name=<user-name>, user_pass=<user-pass>, user_email=<user-email>
        )

* User action Session Login
    * Returns ResUser object.
    session_manager_controller(
        controller='client', ctype='action', action='login',
        client_id=<client-id>, session_token=<token>, user_name=<name>, user_pass=<pass>
        )

* User action Supply Credits
    * Returns {'total_credits': <count>, 'supplied_credits': <count>}
    session_manager_controller(
        controller='client', ctype='action', action='supply', supply='credits'
        client_id=<id>, session_token=<token>, currency=<currency>, credits=<credits>,
        cost=<cost>, notes=<notes>
        )

* User action Convert Credits To Time
    * Returns {'ewallet_credits': <count>, 'credit_clock': <time>}
    session_manager_controller(
        controller='client', ctype='action', action='convert', convert='credits2clock',
        client_id=<id>, session_token=<token>, credits=<credits>, notes=<notes>
        )

* User action Start Clock Timer
    * Returns legacy timestamp for action start timer.
    session_manager_controller(
        controller='client', ctype='action', action='start', start='clock_timer',
        client_id=<id>, session_token=<token>
        )

* User action Pause Clock Timer
    * Return suspend count for current clock consumption session.
    session_manager_controller(
        controller='client', ctype='action', action='pause', pause='clock_timer',
        client_id=<id>, session_token=<token>
        )

* User action Resume Clock Timer
    * Returns total amount of time spent active but suspended in minutes.
    session_manager_controller(
        controller='client', ctype='action', action='resume', pause='clock_timer',
        client_id=<id>, session_token=<token>
        )

* User action Stop Clock Timer:
    * Returns total amount of active time in minutes.
    session_manager_controller(
        controller='client', ctype='action', action='stop', pause='clock_timer',
        client_id=<id>, session_token=<token>
        )

* User action Pay Credits:
    * Returns {'total_credits': <count>, 'spent_credits': <count>}
    session_manager_controller(
        controller='client', ctype='action', action='pay', client_id=<id>,
        session_token=<token>, pay=<partner-email>, credits=<count>
        )

* User action Add Contact:
    * Returns {'new_contact': <alias>, 'contact_record': <id>, 'contact_sheet': <id>}
    session_manager_controller(
        controller='client', ctype='action', action='new', new='contact', contact='record',
        client_id=<id>, session_token=<token>, contact_sheet=<id>,
        user_name=<name>, user_email=<email>, user_phone=<phone>, user_reference=<ref>,
        notes=<notes>,
        )

* User action View Contact List:
    * Returns {'contact_list': <id>, 'contact_records': {<id>: <name>, ...}}
    session_manager_controller(
        controller='client', ctype='action', action='view', view='contact',
        contact='list', client_id=<id>, session_token=<token>
        )

# TODO
* User action View Contact Record:
    * Returns {'contact_record': <id>, record_data={'name': <name>, ...}}
    session_manager_controller(
        controller='client', ctype='action', action='view', view='contact',
        contact='record', client_id=<id>, session_token=<token>, record=<id>
        )

################################################################################
# EWallet Session (Command Chain)
################################################################################

* Create new user account
    ewallet_controller(
        controller='user', ctype='action', action='create', create='account',
        user_name=<name>, user_pass=<pass>, user_email=<email>
        )

* Login user account
    ewallet_controller(
        controller='user', ctype='action', action='login', user_name=<name>,
        user_pass=<pass>
        )

* Supply credits
    ewallet_controller(
        controller='user', ctype='action', action='create', create='transfer',
        ttype='supply', active_session=self.session,
        partner_account=self.fetch_system_core_user_account(),
        credits=<count>, currency=<currency>, cost=<cost>, notes=<notes>
        )


################################################################################
# EWallet Session Manager Worker
################################################################################

* Search session by Session Token
    main_controller(
        controller='system', ctype='action', action='search', search='session',
        session_token=<token>
    )

* Assign worker to session
    main_controller(
        controller='system', ctype='action', action='add', add='session',
        session=<ewallet-session>
        )

* Add new session map
    main_controller(
        controller='system', ctype='action', action='add', add='session_map',
        client_id=<client-id>, session_token=<session-token>, session=<ewallet-session>
        )



[ EXAMPLE ]:

instruction_set = {
    header: {
        client_id:
        src_address:
        src_port:
        session_token:
        loggin_user:
        session_id:
        ...
    }
    command_chain: {
        controller:
        ctype:
        action:
        ...
    }
}
